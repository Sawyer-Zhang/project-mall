<?xml version="1.0" encoding="UTF-8"?>
        <beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.mymmall.dao" annotation-config="true"/>
    <context:property-placeholder location="classpath:datasource.properties"/>
    <!--<bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>-->


    <!-- <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->
    <!-- close() 方法，确保在 spring 容器关闭时数据源能够成功释放 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${db.driverClassName}" />
        <property name="jdbcUrl" value="${db.url}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <!-- 当连接池中的连接用完时， c3p0 一次性创建连接的数目 -->
        <property name="acquireIncrement" value="5" />

        <!-- 定义从数据库获取新连接失败后重复尝试获取连接的次数，默认为 30 -->
        <property name="acquireRetryAttempts" value="30" />

        <!-- 定义两次连接中间隔的时间，单位毫秒，默认为 1000 -->
        <property name="acquireRetryDelay" value="1000" />
        <property name="idleConnectionTestPeriod" value="3000" />

        <!-- 当连接池用完时客户端调用 getConnection() 后等待获取新连接的时间， 超时后将抛出 SQLException ，如设为
            0 则无限期等待。单位毫秒，默认为 0 ； -->
        <property name="checkoutTimeout" value="3000" />
        <property name="maxPoolSize" value="80" />
        <property name="minPoolSize" value="1" />

        <!-- JDBC 的标准参数，用以控制数据源内加载的 PreparedStatement 数量。 但由于预缓存的 Statement 属 于单个
            Connection 而不是整个连接池。 所以设置这个参数需要考虑到多方面的因素，如果 maxStatements 与 maxStatementsPerConnection
            均为 0 ，则缓存被关闭。默认为 0 ； -->
        <property name="maxStatements" value="6000" />
        <property name="initialPoolSize" value="5" />
    </bean>

    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        &lt;!&ndash; 连接池启动时的初始值 &ndash;&gt;
        <property name="initialSize" value="${db.initialSize}"/>
        &lt;!&ndash; 连接池的最大值 &ndash;&gt;
        <property name="maxActive" value="${db.maxActive}"/>
        &lt;!&ndash; 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 &ndash;&gt;
        <property name="maxIdle" value="${db.maxIdle}"/>
        &lt;!&ndash; 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 &ndash;&gt;
        <property name="minIdle" value="${db.minIdle}"/>
        &lt;!&ndash; 最大建立连接等待时间。如果超过此时间将接到异常。设为－1表示无限制 &ndash;&gt;
        <property name="maxWait" value="${db.maxWait}"/>
        &lt;!&ndash;#给出一条简单的sql语句进行验证 &ndash;&gt;
        &lt;!&ndash;<property name="validationQuery" value="select getdate()" />&ndash;&gt;
        <property name="defaultAutoCommit" value="${db.defaultAutoCommit}"/>
        &lt;!&ndash; 回收被遗弃的（一般是忘了释放的）数据库连接到连接池中 &ndash;&gt;
        &lt;!&ndash;<property name="removeAbandoned" value="true" />&ndash;&gt;
        &lt;!&ndash; 数据库连接过多长时间不用将被视为被遗弃而收回连接池中 &ndash;&gt;
        &lt;!&ndash;<property name="removeAbandonedTimeout" value="120" />&ndash;&gt;
        &lt;!&ndash; #连接的超时时间，默认为半小时。 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}"/>

        &lt;!&ndash;# 失效检查线程运行时间间隔，要小于MySQL默认&ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="40000"/>
        &lt;!&ndash;# 检查连接是否有效&ndash;&gt;
        <property name="testWhileIdle" value="true"/>
        &lt;!&ndash;# 检查连接有效性的SQL语句&ndash;&gt;
        <property name="validationQuery" value="SELECT 1 FROM dual"/>
    </bean>-->

    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
     <property name="mapperLocations" value="classpath*:mappers/*Mapper.xml"></property>
       <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>

    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mymmall.dao"/>
    </bean>


</beans>